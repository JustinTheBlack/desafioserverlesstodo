service:
  name: desafioserverlesstodo

plugins:
  - serverless-iam-roles-per-function
  - serverless-pseudo-parameters
  - serverless-appsync-plugin
  - serverless-offline  
  - serverless-webpack
  - serverless-dynamodb-local

custom:
  webpack:
      webpackConfig: ./webpack.config.js
      includeModules: true
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs14.x
  region: sa-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:*Object
      Resource: "*"
    
functions:
  createTodo:
    handler: src/functions/createTodo.handle
    events:
      - http:
          path: /createTodo/{id}
          method: POST
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
          - dynamodb:PutItem
        Resource: "arn:aws:dynamodb:#{AWS::Region}:*:table/users_todos"
  
  listTodo:
    handler: src/functions/listTodo.handle
    events:
      - http:
          path: /listTodo/{id}
          method: GET
          cors: true
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Query
        Resource: "arn:aws:dynamodb:#{AWS::Region}:*:table/users_todos"

resources:
  Resources:
    dbTodoUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users_todos
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH